{"ast":null,"code":"import \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nexport default {\n  //props:['members'],\n  data: function data() {\n    return {\n      member: null,\n      submitted: false\n    };\n  },\n  computed: mapGetters([\"allmembers\"]),\n  methods: {\n    singleget: function singleget() {\n      var _this = this;\n\n      var ind = this.allmembers.findIndex(function (members) {\n        return members.id == _this.$route.params.id;\n      });\n      console.log(this.allmembers[ind]); //console.log(typeof(JSON.stringify(this.members[ind])))\n      //console.log(JSON.parse(JSON.stringify(this.members[ind])))\n\n      this.member = JSON.parse(JSON.stringify(this.allmembers[ind]));\n      console.log(this.member);\n    },\n\n    /* put:function(){\n         this.$http.put(\"/students/\"+this.$route.params.id,this.member).then(function(data){\n                 console.log(data.body);   \n                 this.$emit(\"edit\",this.member);            \n             this.$router.push({ path: '/home' })    \n         });\n     },*/\n    checkput: function checkput() {\n      var pp = JSON.stringify(this.member);\n      alert(pp);\n\n      if (this.member.Name && this.member.Rollno && this.member.Email && this.member.Contact) {\n        var payload = {\n          cid: this.$route.params.id,\n          res: this.member\n        };\n        this.putmembers(payload);\n        this.$router.push({\n          path: '/home'\n        });\n      } else {\n        alert(\"Please Fill All the columns\");\n      }\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    console.log(\"created\");\n    this.singleget();\n    this.$watch(function () {\n      return _this2.$route.params;\n    }, this.singleget);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACAA,MAFA,kBAEA;AACA;AACAC,kBADA;AAEAC;AAFA;AAIA,GAPA;AAQAC,sCARA;AAUAC;AAGAC,aAHA,uBAGA;AAAA;;AAEA;AAAA;AAAA;AACAC,wCAHA,CAIA;AACA;;AACA;AACAA;AACA,KAXA;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC;AACA;AACAC;;AACA,8FACA;AACA;AAAAC;AAAAC;AAAA;AACA;AACA;AAAAC;AAAA;AAEA,OANA,MAOA;AACAH;AACA;AACA;AAhCA,GAVA;AA6CAI,SA7CA,qBA6CA;AAAA;;AACAN;AACA;AACA,gBACA;AAAA;AAAA,KADA,EACA,cADA;AAEA;AAlDA","names":["data","member","submitted","computed","methods","singleget","console","checkput","alert","cid","res","path","created"],"sourceRoot":"src/components","sources":["put-member.vue"],"sourcesContent":["<template>\n<div>\n\n  <div id=\"form2\">\n    <h2>Add a new Member !!</h2>\n    <form v-if=\"!submitted\">\n        <label>ROLL NO: </label><br>\n        <input type=\"text\" v-model=\"member.Rollno\" required/><br>\n        <label>NAME: </label><br>\n        <input type=\"text\" v-model=\"member.Name\" required/><br>\n        <label>Email:</label><br>\n        <input type=\"email\" v-model=\"member.Email\" required/><br>\n        <label>PHONE:</label><br>\n        <input type=\"number\" v-model=\"member.Contact\" required/><br>\n         <label>DEPARTMENT:</label>\n        <multiselect v-model=\"member.depart\" :options=\"department\" placeholder=\"Department\"></multiselect><br>\n       <label>SKILLS:</label>\n        <multiselect v-model=\"member.Skill\" :options=\"skillopt\" :multiple=\"true\" :taggable=\"true\" :clear-on-select=\"true\" tag-placeholder=\"Add this as new tag\" :close-on-select=\"false\" @tag=\"addSkill\" :show-labels=\"false\" placeholder=\"Tell us your skills\"></multiselect>   <br> \n        <button v-on:click.prevent=\"checkput\">Submit</button>\n    </form>\n    </div>\n\n</div>\n    \n</template>\n<script>\nimport { mapGetters } from \"vuex\";\nexport default{\n    //props:['members'],\n    data(){\n        return{\n               member:null,\n               submitted:false,\n        }\n    },\n  computed: mapGetters([\"allmembers\"]),\n       \n    methods:{   \n        \n  \n        singleget(){\n            \n            let ind =  this.allmembers.findIndex(members=>members.id==this.$route.params.id)\n            console.log(this.allmembers[ind])\n            //console.log(typeof(JSON.stringify(this.members[ind])))\n            //console.log(JSON.parse(JSON.stringify(this.members[ind])))\n            this.member=JSON.parse(JSON.stringify(this.allmembers[ind]))\n            console.log(this.member)\n        },\n       /* put:function(){\n            this.$http.put(\"/students/\"+this.$route.params.id,this.member).then(function(data){\n                    console.log(data.body);   \n                    this.$emit(\"edit\",this.member);            \n                this.$router.push({ path: '/home' })    \n            });\n        },*/\n        checkput:function(){\n            let pp = JSON.stringify(this.member)\n            alert(pp)\n            if(this.member.Name && this.member.Rollno && this.member.Email && this.member.Contact)\n            {\n                let payload={cid:this.$route.params.id,res:this.member}\n                this.putmembers(payload);\n                this.$router.push({ path: '/home' })   \n                \n            }\n            else{\n                alert(\"Please Fill All the columns\")\n            }            \n        },\n      \n    },\n     created(){\n         console.log(\"created\")\n        this.singleget()\n        this.$watch(\n         ()=>this.$route.params,this.singleget)\n}\n}\n\n\n\n</script>\n\n\n<style>\n\ninput {\n width: 100%;\n  padding: 12px 20px;\n  margin: 10px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n}\n#form2{\n\n  border-radius: 5px;\n  background-color: #dedede;\n  padding: 20px;\n  width: 50%;\n  margin: auto  ;\n  float: right;\n}\nbutton{\n    width: 50%;\n  background-color: #525252;\n  color: white;\n  padding: 14px 20px;\n  margin: 10px 0;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n.putshow{\n    width: 30%;\n    text-align: center;\n    position: absolute;\n\n}\n\n\n\n</style>"]},"metadata":{},"sourceType":"module"}