{"ast":null,"code":"import \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nexport var store = new Vuex.Store({\n  state: {\n    members: []\n  },\n  getters: {\n    //allmembers:(state)=>state.members\n    allmembers: function allmembers(state) {\n      console.log(\"done\");\n      return state.members;\n    }\n  },\n  mutations: {\n    getmembers: function getmembers(state, payload) {\n      state.members = payload;\n      console.log(state.members);\n      return state.members;\n    },\n\n    /*getmembers:(state,payload)=>{\n        state.members=payload;\n    }*/\n    postmembers: function postmembers(state, payload) {\n      console.log(\"Payload : \" + JSON.stringify(payload));\n      state.members.unshift(payload);\n    },\n    putmembers: function putmembers(state, _ref) {\n      var cid = _ref.cid,\n          res = _ref.res;\n      console.log(rese);\n      var ind = state.members.findIndex(function (members) {\n        return members.id == cid;\n      });\n      state.members.splice(ind, 1, payload);\n    }\n  },\n  actions: {\n    getmembers: function getmembers(context) {\n      axios.get('http://localhost:3000/user').then(function (data) {\n        console.log(data.data);\n        context.commit('getmembers', data.data);\n      });\n    },\n    postmembers: function postmembers(context, payload) {\n      axios.post('http://localhost:3000/user', payload).then(function (data) {\n        console.log(data.data);\n        context.commit('postmembers', data.data);\n      });\n    },\n    putmembers: function putmembers(context, _ref2) {\n      var cid = _ref2.cid,\n          payload = _ref2.payload;\n      axios.put('http://localhost:3000/user/' + cid, payload).then(function (data) {\n        console.log(data.data);\n        var res = data.data;\n        context.commit('putmembers', {\n          cid: cid,\n          res: res\n        });\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/home/local/ZOHOCORP/ashok-pt5302/projectvuex/src/store/store.js"],"names":["Vue","Vuex","axios","use","store","Store","state","members","getters","allmembers","console","log","mutations","getmembers","payload","postmembers","JSON","stringify","unshift","putmembers","cid","res","rese","ind","findIndex","id","splice","actions","context","get","then","data","commit","post","put"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,OAAO,IAAMG,KAAK,GAAC,IAAIH,IAAI,CAACI,KAAT,CAAe;AAC9BC,EAAAA,KAAK,EAAC;AACFC,IAAAA,OAAO,EAAC;AADN,GADwB;AAK9BC,EAAAA,OAAO,EAAC;AACJ;AACAC,IAAAA,UAFI,sBAEOH,KAFP,EAEa;AACbI,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,aAAOL,KAAK,CAACC,OAAb;AACH;AALG,GALsB;AAY9BK,EAAAA,SAAS,EAAC;AACNC,IAAAA,UADM,sBACKP,KADL,EACWQ,OADX,EACmB;AACrBR,MAAAA,KAAK,CAACC,OAAN,GAAcO,OAAd;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACC,OAAlB;AACA,aAAOD,KAAK,CAACC,OAAb;AAEH,KANK;;AAON;AACR;AACA;AACQQ,IAAAA,WAVM,uBAUMT,KAVN,EAUYQ,OAVZ,EAUoB;AACtBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAcK,IAAI,CAACC,SAAL,CAAeH,OAAf,CAA1B;AAEAR,MAAAA,KAAK,CAACC,OAAN,CAAcW,OAAd,CAAsBJ,OAAtB;AACH,KAdK;AAeNK,IAAAA,UAfM,sBAeKb,KAfL,QAeqB;AAAA,UAATc,GAAS,QAATA,GAAS;AAAA,UAALC,GAAK,QAALA,GAAK;AACvBX,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACA,UAAIC,GAAG,GAAIjB,KAAK,CAACC,OAAN,CAAciB,SAAd,CAAwB,UAAAjB,OAAO;AAAA,eAAEA,OAAO,CAACkB,EAAR,IAAYL,GAAd;AAAA,OAA/B,CAAX;AACAd,MAAAA,KAAK,CAACC,OAAN,CAAcmB,MAAd,CAAqBH,GAArB,EAAyB,CAAzB,EAA2BT,OAA3B;AAEH;AApBK,GAZoB;AAqC9Ba,EAAAA,OAAO,EAAC;AACJd,IAAAA,UAAU,EAAC,oBAACe,OAAD,EAAW;AACnB1B,MAAAA,KAAK,CAAC2B,GAAN,CAAU,4BAAV,EACEC,IADF,CAEK,UAACC,IAAD,EAAQ;AACRrB,QAAAA,OAAO,CAACC,GAAR,CAAYoB,IAAI,CAACA,IAAjB;AACAH,QAAAA,OAAO,CAACI,MAAR,CAAe,YAAf,EAA4BD,IAAI,CAACA,IAAjC;AACH,OALF;AAMF,KARG;AASJhB,IAAAA,WAAW,EAAC,qBAACa,OAAD,EAASd,OAAT,EAAmB;AAC3BZ,MAAAA,KAAK,CAAC+B,IAAN,CAAW,4BAAX,EAAwCnB,OAAxC,EACCgB,IADD,CAEI,UAAAC,IAAI,EAAG;AACHrB,QAAAA,OAAO,CAACC,GAAR,CAAYoB,IAAI,CAACA,IAAjB;AACAH,QAAAA,OAAO,CAACI,MAAR,CAAe,aAAf,EAA6BD,IAAI,CAACA,IAAlC;AACH,OALL;AAOH,KAjBG;AAkBJZ,IAAAA,UAAU,EAAC,oBAACS,OAAD,SAAyB;AAAA,UAAfR,GAAe,SAAfA,GAAe;AAAA,UAAXN,OAAW,SAAXA,OAAW;AAChCZ,MAAAA,KAAK,CAACgC,GAAN,CAAU,gCAA8Bd,GAAxC,EAA4CN,OAA5C,EACCgB,IADD,CAEI,UAAAC,IAAI,EAAE;AACFrB,QAAAA,OAAO,CAACC,GAAR,CAAYoB,IAAI,CAACA,IAAjB;AACA,YAAIV,GAAG,GAAEU,IAAI,CAACA,IAAd;AACAH,QAAAA,OAAO,CAACI,MAAR,CAAe,YAAf,EAA4B;AAACZ,UAAAA,GAAG,EAAHA,GAAD;AAAKC,UAAAA,GAAG,EAAHA;AAAL,SAA5B;AACH,OANL;AAQH;AA3BG;AArCsB,CAAf,CAAZ","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex);\n\nexport const store=new Vuex.Store({\n    state:{\n        members:[]\n    },\n\n    getters:{\n        //allmembers:(state)=>state.members\n        allmembers(state){\n            console.log(\"done\")\n            return state.members\n        }\n    },\n    mutations:{\n        getmembers(state,payload){\n            state.members=payload;\n            console.log(state.members)\n            return(state.members);\n            \n        },\n        /*getmembers:(state,payload)=>{\n            state.members=payload;\n        }*/\n        postmembers(state,payload){\n            console.log(\"Payload : \"+ JSON.stringify(payload))\n\n            state.members.unshift(payload);            \n        },\n        putmembers(state,{cid,res}){\n            console.log(rese)\n            let ind =  state.members.findIndex(members=>members.id==cid)\n            state.members.splice(ind,1,payload);\n\n        }\n      \n\n            \n    },\n    actions:{\n        getmembers:(context)=>{\n           axios.get('http://localhost:3000/user')\n            .then(\n                (data)=>{\n                console.log(data.data)\n                context.commit('getmembers',data.data)\n            })\n        },\n        postmembers:(context,payload)=>{\n            axios.post('http://localhost:3000/user',payload)\n            .then(\n                data =>{\n                    console.log(data.data)\n                    context.commit('postmembers',data.data)\n                }\n            )\n        },\n        putmembers:(context,{cid,payload})=>{\n            axios.put('http://localhost:3000/user/'+cid,payload)\n            .then(\n                data=>{\n                    console.log(data.data)\n                    let res =data.data\n                    context.commit('putmembers',{cid,res})\n                }\n            )\n        }\n    \n    }\n        \n}) "]},"metadata":{},"sourceType":"module"}